// player 1.0.0 : sky 3.0.0-2
// https://raw.githubusercontent.com/omega-gg/Sky-runtime/refs/heads/master/script/player.sky
//=================================================================================================
/*
    Copyright (C) 2015-2020 Sky kit authors. <http://omega.gg/Sky>

    Author: Benjamin Arnaud. <http://bunjee.me> <bunjee@omega.gg>

    This file is part of the Sky kit runtime.

    - GNU Lesser General Public License Usage:
    This file may be used under the terms of the GNU Lesser General Public License version 3 as
    published by the Free Software Foundation and appearing in the LICENSE.md file included in the
    packaging of this file. Please review the following information to ensure the GNU Lesser
    General Public License requirements will be met: https://www.gnu.org/licenses/lgpl.html.

    - Private License Usage:
    Sky kit licensees holding valid private licenses may use this file in accordance with the
    private license agreement provided with the Software or, alternatively, in accordance with the
    terms contained in written agreement between you and Sky kit authors. For further information
    contact us at contact@omega.gg.
*/
//=================================================================================================

import QtQuick 2.0
import Sky     1.0

Player
{
    id: player

    //---------------------------------------------------------------------------------------------
    // Properties
    //---------------------------------------------------------------------------------------------

    /* read */ property bool isReady: (player.source != "")

    property int increment    :  40
    property int incrementFast: 100

    //---------------------------------------------------------------------------------------------
    // Aliases
    //---------------------------------------------------------------------------------------------

    property alias background: background

    property alias slider: slider

    property alias loader: loader

    //---------------------------------------------------------------------------------------------
    // Events
    //---------------------------------------------------------------------------------------------

    Component.onCompleted: core.applyBackend(player)

    volume: 0.0

    quality: AbstractBackend.Quality720

    //---------------------------------------------------------------------------------------------
    // Keys
    //---------------------------------------------------------------------------------------------

    /* QML_EVENT */ Keys.onPressed: function(event)
    {
        if (event.key == Qt.Key_Return || event.key == Qt.Key_Enter)
        {
            event.accepted = true;

            window.fullScreen = !(window.fullScreen);
        }
        else if (event.key == Qt.Key_Space)
        {
            event.accepted = true;

            player.togglePlay();
        }
        else if (event.key == Qt.Key_Left)
        {
            event.accepted = true;

            if (event.modifiers == sk.keypad(Qt.ShiftModifier))
            {
                 slider.moveTo(slider.value - incrementFast);
            }
            else slider.moveTo(slider.value - increment);
        }
        else if (event.key == Qt.Key_Right)
        {
            event.accepted = true;

            if (event.modifiers == sk.keypad(Qt.ShiftModifier))
            {
                 slider.moveTo(slider.value + incrementFast);
            }
            else slider.moveTo(slider.value + increment);
        }
    }

    //---------------------------------------------------------------------------------------------
    // Functions
    //---------------------------------------------------------------------------------------------
    // Interface

    function load(source, time)
    {
        if (player.source == source) return;

        pause();

        if (controllerNetwork.textIsUrl(source))
        {
            player.source = source;
        }
        else player.source = "file:///" + source;

        if (time != undefined)
        {
            player.seek(time);
        }

        play();

        while (isLoading) sk.processEvents();

        pause();
    }

    //---------------------------------------------------------------------------------------------
    // Events

    function onLoader()
    {
        return loader;
    }

    function onConsole(list)
    {
        var length = list.length;

        var command = list[0];

        if (command == "load")
        {
            if (length < 2 || length > 3) return false;

            if (length == 2) load(list[1]);
            else             load(list[1], Number(list[2]));

            return true;
        }
        else if (length == 1)
        {
            if (command == "play")
            {
                play();

                return true;
            }
            else if (command == "pause")
            {
                pause();

                return true;
            }
            else if (command == "stop")
            {
                stop();

                return true;
            }
        }
        else if (length == 2)
        {
            if (command == "seek")
            {
                seek(Number(list[1]));

                return true;
            }
        }

        return false;
    }

    function onHelp()
    {
        return "Welcome to Sky player " + sk.versionSky + "\n" +
                "\n" +
                "keyboard:\n" +
                "- Return    switch to fullscreen\n" +
                "- Space     toggle play / pause\n" +
                "- Arrows    seek the timeline\n" +
                "- Shift     seek faster\n" +
                "\n" +
                "console:\n" +
                "> load <source> [time]    load the video\n" +
                "> play                    play the video\n" +
                "> pause                   pause the video\n" +
                "> stop                    stop the video\n" +
                "> seek <time>             seek at the given time";
    }

    //---------------------------------------------------------------------------------------------
    // Children
    //---------------------------------------------------------------------------------------------

    Rectangle
    {
        id: background

        anchors.fill: parent

        z: -1

        visible: isReady

        color: "black"
    }

    SliderStream
    {
        id: slider

        anchors.left  : parent.left
        anchors.right : parent.right
        anchors.bottom: parent.bottom

        anchors.margins: st.dp16

        active: player.isPlaying

        currentTime: player.currentTime

        duration: player.duration

        progress: player.progress

        onHandleReleased:
        {
            if (player.hasStarted == false)
            {
                player.play ();
                player.pause();
            }

            // NOTE: When clicking on the slider we try to interpolate a chapter position.
            if (slider.isClicked())
            {
                 player.seek(st.getChapterTime(slider, st.dp4));
            }
            else player.seek(slider.value);
        }
    }

    Loader
    {
        id: loader

        anchors.fill: parent

        sourceComponent: (isReady) ? null : componentDefault
    }

    Component
    {
        id: componentDefault

        Item
        {
            TextBase
            {
                anchors.centerIn: parent

                text: qsTr("Welcome to Sky player")

                font.pixelSize: st.dp32
            }
        }
    }
}
